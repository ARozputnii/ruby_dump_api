---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/auth/sign-up":
    post:
      summary: creates User
      tags:
      - Authorization
      parameters: []
      responses:
        '200':
          description: Creates user
          content: {}
        '409':
          description: doesnt create
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/api/v1/auth/sign-in":
    post:
      summary: Login user
      tags:
      - Authorization
      parameters: []
      responses:
        '200':
          description: sign in user
          content: {}
        '401':
          description: doesnt create
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/api/v1/auth/auto-login":
    get:
      summary: auto login
      tags:
      - Authorization
      security:
      - ApiKeyAuth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: return user
          content: {}
        '401':
          description: doesnt create
          content: {}
  "/api/v1/categories":
    post:
      summary: Create category
      tags:
      - Categories
      security:
      - ApiKeyAuth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: category created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/categories/{id}":
    patch:
      summary: Update category
      tags:
      - Categories
      security:
      - ApiKeyAuth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: category updated
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: Delete category
      tags:
      - Categories
      security:
      - ApiKeyAuth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: no_content
          content: {}
  "/api/v1/posts":
    get:
      summary: 'Index posts '
      tags:
      - Posts
      security:
      - ApiKeyAuth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All posts
          content: {}
    post:
      summary: Create post
      tags:
      - Posts
      security:
      - ApiKeyAuth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: post created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                user_id:
                  type: integer
              required:
              - title
              - body
              - user_id
  "/api/v1/posts/{id}":
    patch:
      summary: Update post
      tags:
      - Posts
      security:
      - ApiKeyAuth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Post updated
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                user_id:
                  type: integer
              required:
              - title
              - body
              - user_id
    delete:
      summary: Delete post
      tags:
      - Posts
      security:
      - ApiKeyAuth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: no_content
          content: {}
  "/api/v1/first-load-resources":
    get:
      summary: 'Index posts '
      tags:
      - First Load resources
      responses:
        '200':
          description: All resources
          content: {}
servers:
- url: http://localhost:3000
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Authorization
      in: header
      description: "{token}"
